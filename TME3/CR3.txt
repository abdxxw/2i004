=======================================  TME3  =============================================
############################## BOUSBA Abdellah 3804891 #####################################
============================================================================================

 ==============
|| Exercice1: ||
 ==============

1.pour realiser l'ALU on utilse un mux2vers1 sur 4 bits, le selecteur sera aluop , si =0 on selectione B si =1 NOT(B)
et on relis la sortie avec le B en utilisant un additieur du TME2, ensuite on met Aluop comme retenue entrant de l'additioneur
(0 si addition , 1 si soustraction (car B = NOT(B) +1)


2.on fait une simulation avec les operation vu en TD et en trouve les meme resultats.

3.L'intervalle de valeur est : X+Y avec X,Y ?  [0,(2^3)-1]  / X-Y  ?  [0,(2^3)+1]

4. expression de chaque signal : CF = S0 , SF = S3 , ZF = NOT(S3+S2+S1+S0) , OV = Cout n-2 XOR Cout n-1

remarque :
on doit changer l'additioneur 4bits par 4 additioneur 1bit, pour pouvoir recuperer le Cout n-2

5.      0001-0001 = 0000 , CF=1 , OV=0 , SF=0 , ZF=1
	0111-1000 = 1111 , CF=0 , OV=1 , SF=1 , ZF=0
	0111+0111 = 1110 , CF=0 , OV=1 , SF=1 , ZF=0
	
============================================================================================

 ==============
|| Exercice2: ||
 ==============


1.
— 0011 >> 0 = 0011b = 3d (3/1)
— 0011 >> 1 = 0001b = 1d (3/2)
— 1011 >> 1 = 1101b = -3d (-7/2)
— 0011 >> 2 = 0000b = 0d (3/4)
— 1011 >> 2 = 1110b = -2d (-7/4)
— 0011 >> 3 = 0000b = 0d (3/8)
— 1011 >> 3 = 1111b = -1d (-7/8)


le decalage de i bit est la dévision entier sur 2^i 

2.

d1  d0   s3  s2  s1  s0

0   0    a3  a2  a1  a0          
0   1    a3  a3  a2  a1       
1   0    a3  a3  a3  a2          
1   1    a3  a3  a3  a3   


alors   s3 = a3
	s2 = NOT(d1).NOT(d0).a2+a3.NOT(d1.d0) =  NOT(d1).NOT(d0).a2+a3.(d1+d0)
	s1 = NOT(d1).NOT(d0).a1+NOT(d1).d0.a2+d1.a3 =NOT(d1).(NOT(d0)a1+d0.a2)+d1.a3
	s0 = NOT(d1).NOT(d0).a0+NOT(d1).d0.a1+d1.NOT(d0).a2+d1.d0.a3   

remarque :
l expresion du format not(a).b+a.c est mux 2vers1 1bit avec a selecteur

 ============================================================================================

 ==============
|| Exercice3: ||
 ==============


1.

— 0011 << 0 = 0011 = 3
— 0011 << 1 = 0110 = 6
— 0011 << 2 = 1100 = 12
— 0011 << 3 = 1000 = 8

decalage a gauche de i bits est la multiplication a 2^i

2.


d1  d0   s3  s2  s1  s0

0   0    a3  a2  a1  a0          
0   1    a2  a1  a0   0       
1   0    a1  a0   0   0          
1   1    a0   0   0   0

donc :  s0 = NOT(d1).NOT(d0).a0
	s1 = NOT(d1).NOT(d0).a1+NOT(d1).d0.a0 = NOT(d1).(NOT(d0)a1+d0.a0)
	s2 = NOT(d1).NOT(d0).a2+NOT(d1).d0.a1+d1.NOT(d0).a0 = NOT(d1).(NOT(d0)a2+d0.a1)+d1.NOT(d0).a0
	s3 = NOT(d1).NOT(d0).a3+NOT(d1).d0.a2+d1.NOT(d0).a1+d1.d0.a0

 ============================================================================================

 ==============
|| Exercice3: ||
 ==============

1. B>A :

S = (b3 > a3) + (b3 = a3).(b2 > a2) + (b3 = a3).(b2 = a2).(b1 > a1) + (b3 = a3).(b2 = a2).(b1 = a1).(b0 > a0)

2.      pour coder b = a on utilise XNOR (not XOR)
	bi > ai est vrai ssi bi =1 et ai =0 alors  bi.NOT(ai)

3. en remplaçant dans s on obtient :

		s = b3.NOT(a3)+NOT(b3 XOR a3)(b2.NOT(a2)+NOT(b2 XOR a2)(b1.NOT(a1)+NOT(b1 XOR a1).(b0.NOT(a0))))

